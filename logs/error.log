{"label":"src/utils/logger.js","level":"error","message":"Invalid email or password","method":"POST","stack":"Error: Invalid email or password\n    at /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:598:21","timestamp":"2025-08-13 12:25:03","url":"/api/auth/login"}
{"label":"src/utils/logger.js","level":"error","message":"Invalid email or password","method":"POST","stack":"Error: Invalid email or password\n    at /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:598:21","timestamp":"2025-08-13 12:27:19","url":"/api/auth/login"}
{"duration":"28ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":404,"timestamp":"2025-08-13 14:09:33","url":"/api/auth/logi"}
{"duration":"361ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":404,"timestamp":"2025-08-13 14:25:11","url":"/health"}
{"duration":"5ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":404,"timestamp":"2025-08-13 14:25:39","url":"/health"}
{"duration":"493ms","ip":"::1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":404,"timestamp":"2025-08-13 19:43:58","url":"/api/auth/users/login"}
{"label":"src/utils/logger.js","level":"error","message":"Invalid email or password","method":"POST","stack":"Error: Invalid email or password\n    at /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:588:21","timestamp":"2025-08-13 21:28:28","url":"/api/auth/login"}
{"duration":"34ms","ip":"::1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":401,"timestamp":"2025-08-13 21:28:28","url":"/api/auth/login"}
{"label":"src/utils/logger.js","level":"error","message":"Invalid email or password","method":"POST","stack":"Error: Invalid email or password\n    at /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:588:21","timestamp":"2025-08-13 21:28:35","url":"/api/auth/login"}
{"duration":"50ms","ip":"::1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":401,"timestamp":"2025-08-13 21:28:35","url":"/api/auth/login"}
{"duration":"11ms","ip":"::1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":404,"timestamp":"2025-08-13 21:40:30","url":"/api/register"}
{"duration":"146ms","ip":"::1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":404,"timestamp":"2025-08-13 21:42:41","url":"/api/register"}
{"duration":"171ms","ip":"::1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":404,"timestamp":"2025-08-13 21:43:32","url":"/api/register"}
{"duration":"24ms","ip":"::1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":400,"timestamp":"2025-08-13 21:47:19","url":"/api/auth/register"}
{"duration":"48ms","ip":"::1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"GET","status":404,"timestamp":"2025-08-13 21:54:18","url":"/api/auth/health"}
{"duration":"33ms","ip":"::1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"GET","status":404,"timestamp":"2025-08-13 22:00:30","url":"/api/auth/health"}
{"duration":"64ms","ip":"::1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"GET","status":404,"timestamp":"2025-08-13 22:01:01","url":"/api/auth/health"}
{"duration":"6ms","ip":"::1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"GET","status":404,"timestamp":"2025-08-13 22:01:29","url":"/api/auth/health"}
{"duration":"6ms","ip":"::1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"GET","status":404,"timestamp":"2025-08-13 22:01:35","url":"/api/auth/health"}
{"label":"src/utils/logger.js","level":"error","message":"User login failed Cannot read properties of undefined (reading 'map')","stack":"TypeError: Cannot read properties of undefined (reading 'map')\n    at /Users/victoroluborode/Enterprise-authentication-service/src/services/Tokenservice.js:14:31\n    at Array.flatMap (<anonymous>)\n    at createAccessToken (/Users/victoroluborode/Enterprise-authentication-service/src/services/Tokenservice.js:13:47)\n    at /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:609:33","timestamp":"2025-08-18 15:06:25"}
{"label":"src/utils/logger.js","level":"error","message":"Cannot read properties of undefined (reading 'map')","method":"POST","stack":"TypeError: Cannot read properties of undefined (reading 'map')\n    at /Users/victoroluborode/Enterprise-authentication-service/src/services/Tokenservice.js:14:31\n    at Array.flatMap (<anonymous>)\n    at createAccessToken (/Users/victoroluborode/Enterprise-authentication-service/src/services/Tokenservice.js:13:47)\n    at /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:609:33","timestamp":"2025-08-18 15:06:25","url":"/api/auth/login"}
{"duration":"776ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":500,"timestamp":"2025-08-18 15:06:25","url":"/api/auth/login"}
{"duration":"11ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":403,"timestamp":"2025-08-20 11:44:57","url":"/api/auth/post"}
{"duration":"2ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":403,"timestamp":"2025-08-20 11:45:12","url":"/api/auth/token"}
{"duration":"30ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":400,"timestamp":"2025-08-20 13:41:06","url":"/api/auth/register"}
{"duration":"36ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":400,"timestamp":"2025-08-20 13:42:11","url":"/api/auth/register"}
{"duration":"24ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":400,"timestamp":"2025-08-20 13:45:21","url":"/api/auth/register"}
{"duration":"3ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":400,"timestamp":"2025-08-20 13:46:54","url":"/api/auth/register"}
{"label":"src/utils/logger.js","level":"error","message":"User already exists","method":"POST","stack":"Error: User already exists\n    at /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:70:21\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-08-20 14:10:15","url":"/api/auth/register"}
{"duration":"1036ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":400,"timestamp":"2025-08-20 14:10:15","url":"/api/auth/register"}
{"command":{"args":[],"name":"exec"},"label":"src/utils/logger.js","level":"error","message":"User registration failed EXECABORT Transaction discarded because of previous errors.","previousErrors":[{"command":{"args":["auth_service:user:op:find_unique:key:1295388974"],"name":"JSON.GET"}}],"stack":"ReplyError: EXECABORT Transaction discarded because of previous errors.\n    at parseError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/redis-parser/lib/parser.js:179:12)\n    at parseType (/Users/victoroluborode/Enterprise-authentication-service/node_modules/redis-parser/lib/parser.js:302:14)","timestamp":"2025-08-20 14:19:54"}
{"label":"src/utils/logger.js","level":"error","message":"EXECABORT Transaction discarded because of previous errors.","method":"POST","stack":"ReplyError: EXECABORT Transaction discarded because of previous errors.\n    at parseError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/redis-parser/lib/parser.js:179:12)\n    at parseType (/Users/victoroluborode/Enterprise-authentication-service/node_modules/redis-parser/lib/parser.js:302:14)","timestamp":"2025-08-20 14:19:54","url":"/api/auth/register"}
{"duration":"321ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":500,"timestamp":"2025-08-20 14:19:54","url":"/api/auth/register"}
{"label":"src/utils/logger.js","level":"error","message":"User already exists","method":"POST","stack":"Error: User already exists\n    at /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:70:21\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-08-20 14:21:18","url":"/api/auth/register"}
{"duration":"1079ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":400,"timestamp":"2025-08-20 14:21:18","url":"/api/auth/register"}
{"label":"src/utils/logger.js","level":"error","message":"User already exists","method":"POST","stack":"Error: User already exists\n    at /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:77:21\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-08-20 14:31:55","url":"/api/auth/register"}
{"duration":"1112ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":400,"timestamp":"2025-08-20 14:31:55","url":"/api/auth/register"}
{"clientVersion":"6.14.0","code":"P5010","label":"src/utils/logger.js","level":"error","message":"User registration failed \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:68:46\n\n  65 \n  66 try {\n  67   const startFind = process.hrtime.bigint();\n→ 68   const existingUser = await prisma.user.findUnique(\nCannot fetch data from service:\nUnable to connect to the Accelerate API. This may be due to a network or DNS issue. Please check your connection and the Accelerate connection string. For details, visit https://www.prisma.io/docs/accelerate/troubleshoot.","meta":{"modelName":"user"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:68:46\n\n  65 \n  66 try {\n  67   const startFind = process.hrtime.bigint();\n→ 68   const existingUser = await prisma.user.findUnique(\nCannot fetch data from service:\nUnable to connect to the Accelerate API. This may be due to a network or DNS issue. Please check your connection and the Accelerate connection string. For details, visit https://www.prisma.io/docs/accelerate/troubleshoot.\n    at ei.handleRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:7283)\n    at ei.handleAndLogRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6608)\n    at ei.request (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6315)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async a (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:130:9551)\n    at async /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:68:28","timestamp":"2025-08-20 15:01:15"}
{"label":"src/utils/logger.js","level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:68:46\n\n  65 \n  66 try {\n  67   const startFind = process.hrtime.bigint();\n→ 68   const existingUser = await prisma.user.findUnique(\nCannot fetch data from service:\nUnable to connect to the Accelerate API. This may be due to a network or DNS issue. Please check your connection and the Accelerate connection string. For details, visit https://www.prisma.io/docs/accelerate/troubleshoot.","method":"POST","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:68:46\n\n  65 \n  66 try {\n  67   const startFind = process.hrtime.bigint();\n→ 68   const existingUser = await prisma.user.findUnique(\nCannot fetch data from service:\nUnable to connect to the Accelerate API. This may be due to a network or DNS issue. Please check your connection and the Accelerate connection string. For details, visit https://www.prisma.io/docs/accelerate/troubleshoot.\n    at ei.handleRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:7283)\n    at ei.handleAndLogRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6608)\n    at ei.request (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6315)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async a (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:130:9551)\n    at async /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:68:28","timestamp":"2025-08-20 15:01:15","url":"/api/auth/register"}
{"duration":"1008ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":500,"timestamp":"2025-08-20 15:01:15","url":"/api/auth/register"}
{"command":{"args":[],"name":"exec"},"label":"src/utils/logger.js","level":"error","message":"User registration failed EXECABORT Transaction discarded because of previous errors.","previousErrors":[{"command":{"args":["auth_service:user:op:find_unique:key:264020644"],"name":"JSON.GET"}}],"stack":"ReplyError: EXECABORT Transaction discarded because of previous errors.\n    at parseError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/redis-parser/lib/parser.js:179:12)\n    at parseType (/Users/victoroluborode/Enterprise-authentication-service/node_modules/redis-parser/lib/parser.js:302:14)","timestamp":"2025-08-22 23:09:44"}
{"label":"src/utils/logger.js","level":"error","message":"EXECABORT Transaction discarded because of previous errors.","method":"POST","stack":"ReplyError: EXECABORT Transaction discarded because of previous errors.\n    at parseError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/redis-parser/lib/parser.js:179:12)\n    at parseType (/Users/victoroluborode/Enterprise-authentication-service/node_modules/redis-parser/lib/parser.js:302:14)","timestamp":"2025-08-22 23:09:44","url":"/api/auth/register"}
{"duration":"279ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":500,"timestamp":"2025-08-22 23:09:44","url":"/api/auth/register"}
{"clientVersion":"6.14.0","label":"src/utils/logger.js","level":"error","message":"User registration failed \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:68:46\n\n  65 \n  66 try {\n  67   const startFind = process.hrtime.bigint();\n→ 68   const existingUser = await prisma.user.findUnique({\n         where: {\n           email: \"skeppy110@gmail.com\"\n         },\n         cacheStrategy: {\n         ~~~~~~~~~~~~~\n           ttl: 60,\n           stale: 30\n         },\n         cache: undefined\n       })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:68:46\n\n  65 \n  66 try {\n  67   const startFind = process.hrtime.bigint();\n→ 68   const existingUser = await prisma.user.findUnique({\n         where: {\n           email: \"skeppy110@gmail.com\"\n         },\n         cacheStrategy: {\n         ~~~~~~~~~~~~~\n           ttl: 60,\n           stale: 30\n         },\n         cache: undefined\n       })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.\n    at _n (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ei.handleRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6926)\n    at ei.handleAndLogRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6608)\n    at ei.request (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6315)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async getCache (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:185:20)\n    at async autoCacheAction (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:207:10)\n    at async a (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:130:9551)\n    at async /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:68:28","timestamp":"2025-08-22 23:15:33"}
{"label":"src/utils/logger.js","level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:68:46\n\n  65 \n  66 try {\n  67   const startFind = process.hrtime.bigint();\n→ 68   const existingUser = await prisma.user.findUnique({\n         where: {\n           email: \"skeppy110@gmail.com\"\n         },\n         cacheStrategy: {\n         ~~~~~~~~~~~~~\n           ttl: 60,\n           stale: 30\n         },\n         cache: undefined\n       })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.","method":"POST","stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:68:46\n\n  65 \n  66 try {\n  67   const startFind = process.hrtime.bigint();\n→ 68   const existingUser = await prisma.user.findUnique({\n         where: {\n           email: \"skeppy110@gmail.com\"\n         },\n         cacheStrategy: {\n         ~~~~~~~~~~~~~\n           ttl: 60,\n           stale: 30\n         },\n         cache: undefined\n       })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.\n    at _n (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ei.handleRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6926)\n    at ei.handleAndLogRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6608)\n    at ei.request (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6315)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async getCache (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:185:20)\n    at async autoCacheAction (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:207:10)\n    at async a (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:130:9551)\n    at async /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:68:28","timestamp":"2025-08-22 23:15:33","url":"/api/auth/register"}
{"duration":"4090ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":500,"timestamp":"2025-08-22 23:15:33","url":"/api/auth/register"}
{"label":"src/utils/logger.js","level":"error","message":"User registration failed prisma.user.findUnique(...).cacheStrategy is not a function","stack":"TypeError: prisma.user.findUnique(...).cacheStrategy is not a function\n    at /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:72:10\n    at Layer.handleRequest (/Users/victoroluborode/Enterprise-authentication-service/node_modules/router/lib/layer.js:152:17)\n    at next (/Users/victoroluborode/Enterprise-authentication-service/node_modules/router/lib/route.js:157:13)\n    at /Users/victoroluborode/Enterprise-authentication-service/node_modules/express-rate-limit/dist/index.cjs:635:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/victoroluborode/Enterprise-authentication-service/node_modules/express-rate-limit/dist/index.cjs:553:5","timestamp":"2025-08-22 23:21:23"}
{"label":"src/utils/logger.js","level":"error","message":"prisma.user.findUnique(...).cacheStrategy is not a function","method":"POST","stack":"TypeError: prisma.user.findUnique(...).cacheStrategy is not a function\n    at /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:72:10\n    at Layer.handleRequest (/Users/victoroluborode/Enterprise-authentication-service/node_modules/router/lib/layer.js:152:17)\n    at next (/Users/victoroluborode/Enterprise-authentication-service/node_modules/router/lib/route.js:157:13)\n    at /Users/victoroluborode/Enterprise-authentication-service/node_modules/express-rate-limit/dist/index.cjs:635:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /Users/victoroluborode/Enterprise-authentication-service/node_modules/express-rate-limit/dist/index.cjs:553:5","timestamp":"2025-08-22 23:21:23","url":"/api/auth/register"}
{"duration":"134ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":500,"timestamp":"2025-08-22 23:21:23","url":"/api/auth/register"}
{"duration":"11ms","ip":"::1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"GET","status":404,"timestamp":"2025-08-22 23:30:01","url":"/favicon.ico"}
{"clientVersion":"6.14.0","label":"src/utils/logger.js","level":"error","message":"User login failed \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:213:38\n\n  210 const userAgent = req.headers[\"user-agent\"];\n  211 \n  212 try {\n→ 213   const user = await prisma.user.findUnique({\n          cacheStrategy: {\n          ~~~~~~~~~~~~~\n            swr: 60,\n            ttl: 30\n          },\n          where: {\n            email: \"collins110@gmail.com\"\n          },\n          select: {\n            id: true,\n            email: true,\n            fullname: true,\n            password: true,\n            roles: {\n              select: {\n                role: {\n                  select: {\n                    name: true,\n                    permissions: {\n                      select: {\n                        permission: {\n                          select: {\n                            name: true\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          cache: undefined\n        })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:213:38\n\n  210 const userAgent = req.headers[\"user-agent\"];\n  211 \n  212 try {\n→ 213   const user = await prisma.user.findUnique({\n          cacheStrategy: {\n          ~~~~~~~~~~~~~\n            swr: 60,\n            ttl: 30\n          },\n          where: {\n            email: \"collins110@gmail.com\"\n          },\n          select: {\n            id: true,\n            email: true,\n            fullname: true,\n            password: true,\n            roles: {\n              select: {\n                role: {\n                  select: {\n                    name: true,\n                    permissions: {\n                      select: {\n                        permission: {\n                          select: {\n                            name: true\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          cache: undefined\n        })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.\n    at _n (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ei.handleRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6926)\n    at ei.handleAndLogRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6608)\n    at ei.request (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6315)\n    at async getCache (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:185:20)\n    at async autoCacheAction (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:207:10)\n    at async a (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:130:9551)\n    at async /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:213:20","timestamp":"2025-08-23 00:05:22"}
{"label":"src/utils/logger.js","level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:213:38\n\n  210 const userAgent = req.headers[\"user-agent\"];\n  211 \n  212 try {\n→ 213   const user = await prisma.user.findUnique({\n          cacheStrategy: {\n          ~~~~~~~~~~~~~\n            swr: 60,\n            ttl: 30\n          },\n          where: {\n            email: \"collins110@gmail.com\"\n          },\n          select: {\n            id: true,\n            email: true,\n            fullname: true,\n            password: true,\n            roles: {\n              select: {\n                role: {\n                  select: {\n                    name: true,\n                    permissions: {\n                      select: {\n                        permission: {\n                          select: {\n                            name: true\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          cache: undefined\n        })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.","method":"POST","stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:213:38\n\n  210 const userAgent = req.headers[\"user-agent\"];\n  211 \n  212 try {\n→ 213   const user = await prisma.user.findUnique({\n          cacheStrategy: {\n          ~~~~~~~~~~~~~\n            swr: 60,\n            ttl: 30\n          },\n          where: {\n            email: \"collins110@gmail.com\"\n          },\n          select: {\n            id: true,\n            email: true,\n            fullname: true,\n            password: true,\n            roles: {\n              select: {\n                role: {\n                  select: {\n                    name: true,\n                    permissions: {\n                      select: {\n                        permission: {\n                          select: {\n                            name: true\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          cache: undefined\n        })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.\n    at _n (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ei.handleRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6926)\n    at ei.handleAndLogRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6608)\n    at ei.request (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6315)\n    at async getCache (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:185:20)\n    at async autoCacheAction (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:207:10)\n    at async a (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:130:9551)\n    at async /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:213:20","timestamp":"2025-08-23 00:05:22","url":"/api/auth/login"}
{"duration":"140ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":500,"timestamp":"2025-08-23 00:05:22","url":"/api/auth/login"}
{"clientVersion":"6.14.0","label":"src/utils/logger.js","level":"error","message":"User login failed \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:213:38\n\n  210 const userAgent = req.headers[\"user-agent\"];\n  211 \n  212 try {\n→ 213   const user = await prisma.user.findUnique({\n          cacheStrategy: {\n          ~~~~~~~~~~~~~\n            swr: 60,\n            ttl: 30\n          },\n          where: {\n            email: \"collins110@gmail.com\"\n          },\n          select: {\n            id: true,\n            email: true,\n            fullname: true,\n            password: true,\n            roles: {\n              select: {\n                role: {\n                  select: {\n                    name: true,\n                    permissions: {\n                      select: {\n                        permission: {\n                          select: {\n                            name: true\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          cache: undefined\n        })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:213:38\n\n  210 const userAgent = req.headers[\"user-agent\"];\n  211 \n  212 try {\n→ 213   const user = await prisma.user.findUnique({\n          cacheStrategy: {\n          ~~~~~~~~~~~~~\n            swr: 60,\n            ttl: 30\n          },\n          where: {\n            email: \"collins110@gmail.com\"\n          },\n          select: {\n            id: true,\n            email: true,\n            fullname: true,\n            password: true,\n            roles: {\n              select: {\n                role: {\n                  select: {\n                    name: true,\n                    permissions: {\n                      select: {\n                        permission: {\n                          select: {\n                            name: true\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          cache: undefined\n        })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.\n    at _n (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ei.handleRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6926)\n    at ei.handleAndLogRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6608)\n    at ei.request (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6315)\n    at async getCache (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:185:20)\n    at async autoCacheAction (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:207:10)\n    at async a (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:130:9551)\n    at async /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:213:20","timestamp":"2025-08-23 00:06:40"}
{"label":"src/utils/logger.js","level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:213:38\n\n  210 const userAgent = req.headers[\"user-agent\"];\n  211 \n  212 try {\n→ 213   const user = await prisma.user.findUnique({\n          cacheStrategy: {\n          ~~~~~~~~~~~~~\n            swr: 60,\n            ttl: 30\n          },\n          where: {\n            email: \"collins110@gmail.com\"\n          },\n          select: {\n            id: true,\n            email: true,\n            fullname: true,\n            password: true,\n            roles: {\n              select: {\n                role: {\n                  select: {\n                    name: true,\n                    permissions: {\n                      select: {\n                        permission: {\n                          select: {\n                            name: true\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          cache: undefined\n        })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.","method":"POST","stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:213:38\n\n  210 const userAgent = req.headers[\"user-agent\"];\n  211 \n  212 try {\n→ 213   const user = await prisma.user.findUnique({\n          cacheStrategy: {\n          ~~~~~~~~~~~~~\n            swr: 60,\n            ttl: 30\n          },\n          where: {\n            email: \"collins110@gmail.com\"\n          },\n          select: {\n            id: true,\n            email: true,\n            fullname: true,\n            password: true,\n            roles: {\n              select: {\n                role: {\n                  select: {\n                    name: true,\n                    permissions: {\n                      select: {\n                        permission: {\n                          select: {\n                            name: true\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          cache: undefined\n        })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.\n    at _n (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ei.handleRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6926)\n    at ei.handleAndLogRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6608)\n    at ei.request (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6315)\n    at async getCache (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:185:20)\n    at async autoCacheAction (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:207:10)\n    at async a (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:130:9551)\n    at async /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:213:20","timestamp":"2025-08-23 00:06:40","url":"/api/auth/login"}
{"duration":"53ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":500,"timestamp":"2025-08-23 00:06:40","url":"/api/auth/login"}
{"clientVersion":"6.14.0","label":"src/utils/logger.js","level":"error","message":"User login failed \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:239:38\n\n  236 const userAgent = req.headers[\"user-agent\"];\n  237 \n  238 try {\n→ 239   const user = await prisma.user.findUnique({\n          cacheStrategy: {\n          ~~~~~~~~~~~~~\n            swr: 60,\n            ttl: 30\n          },\n          where: {\n            email: \"collins110@gmail.com\"\n          },\n          select: {\n            id: true,\n            email: true,\n            fullname: true,\n            password: true,\n            roles: {\n              select: {\n                role: {\n                  select: {\n                    name: true,\n                    permissions: {\n                      select: {\n                        permission: {\n                          select: {\n                            name: true\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          cache: undefined\n        })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:239:38\n\n  236 const userAgent = req.headers[\"user-agent\"];\n  237 \n  238 try {\n→ 239   const user = await prisma.user.findUnique({\n          cacheStrategy: {\n          ~~~~~~~~~~~~~\n            swr: 60,\n            ttl: 30\n          },\n          where: {\n            email: \"collins110@gmail.com\"\n          },\n          select: {\n            id: true,\n            email: true,\n            fullname: true,\n            password: true,\n            roles: {\n              select: {\n                role: {\n                  select: {\n                    name: true,\n                    permissions: {\n                      select: {\n                        permission: {\n                          select: {\n                            name: true\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          cache: undefined\n        })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.\n    at _n (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ei.handleRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6926)\n    at ei.handleAndLogRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6608)\n    at ei.request (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6315)\n    at async getCache (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:185:20)\n    at async autoCacheAction (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:207:10)\n    at async a (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:130:9551)\n    at async /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:239:20","timestamp":"2025-08-23 00:11:27"}
{"label":"src/utils/logger.js","level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:239:38\n\n  236 const userAgent = req.headers[\"user-agent\"];\n  237 \n  238 try {\n→ 239   const user = await prisma.user.findUnique({\n          cacheStrategy: {\n          ~~~~~~~~~~~~~\n            swr: 60,\n            ttl: 30\n          },\n          where: {\n            email: \"collins110@gmail.com\"\n          },\n          select: {\n            id: true,\n            email: true,\n            fullname: true,\n            password: true,\n            roles: {\n              select: {\n                role: {\n                  select: {\n                    name: true,\n                    permissions: {\n                      select: {\n                        permission: {\n                          select: {\n                            name: true\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          cache: undefined\n        })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.","method":"POST","stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation in\n/Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:239:38\n\n  236 const userAgent = req.headers[\"user-agent\"];\n  237 \n  238 try {\n→ 239   const user = await prisma.user.findUnique({\n          cacheStrategy: {\n          ~~~~~~~~~~~~~\n            swr: 60,\n            ttl: 30\n          },\n          where: {\n            email: \"collins110@gmail.com\"\n          },\n          select: {\n            id: true,\n            email: true,\n            fullname: true,\n            password: true,\n            roles: {\n              select: {\n                role: {\n                  select: {\n                    name: true,\n                    permissions: {\n                      select: {\n                        permission: {\n                          select: {\n                            name: true\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          cache: undefined\n        })\n\nUnknown argument `cacheStrategy`. Available options are marked with ?.\n    at _n (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ei.handleRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6926)\n    at ei.handleAndLogRequestError (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6608)\n    at ei.request (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:121:6315)\n    at async getCache (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:185:20)\n    at async autoCacheAction (/Users/victoroluborode/Enterprise-authentication-service/node_modules/prisma-extension-redis/dist/index.js:207:10)\n    at async a (/Users/victoroluborode/Enterprise-authentication-service/node_modules/@prisma/client/runtime/library.js:130:9551)\n    at async /Users/victoroluborode/Enterprise-authentication-service/src/routes/auth.js:239:20","timestamp":"2025-08-23 00:11:27","url":"/api/auth/login"}
{"duration":"106ms","ip":"::ffff:127.0.0.1","label":"src/utils/logger.js","level":"error","message":"Request completed","method":"POST","status":500,"timestamp":"2025-08-23 00:11:27","url":"/api/auth/login"}
